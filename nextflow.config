profiles {
  singularity {

    singularity.enabled = 'true'
    singularity.autoMounts = 'true'

    // path to the singularity containers
    params.sif_dir = "${baseDir}/singularity"

    process {

      withName:preprocessing_checkBamValidity {
        container = "${params.sif_dir}/ppBedtools.sif"
      }

      withName:preprocessing_checkFqValidity {
        container = "${params.sif_dir}/ppFqtools.sif"
      }

      withName:preprocessing_bam2fastq {
        container = "${params.sif_dir}/ppBedtools.sif"
      }

      withName:preprocessing_countReads {
        container = "${params.sif_dir}/ppFqtools.sif"
      }

      withName:preprocessing_fastp {
        container = "${params.sif_dir}/ppFastp.sif"
      }

      withName:preprocessing_fastQC {
        container = "${params.sif_dir}/ppFastqc.sif"
      }

      withName:preprocessing_kraken2 {
        container = "${params.sif_dir}/ppKraken2.sif"
      }

      withName:preprocessing_mykrobe {
        container = "${params.sif_dir}/ppMykrobe.sif"
      }

      withName:preprocessing_bowtie2 {
        container = "${params.sif_dir}/ppBowtie2.sif"
      }

      withName:preprocessing_identifyBacterialContaminants {
        container = "${params.sif_dir}/ppPerljson.sif"
      }

      withName:preprocessing_mapToContamFa {
        container = "${params.sif_dir}/ppBwa.sif"
      }

      withName:preprocessing_reKraken {
        container = "${params.sif_dir}/ppKraken2.sif"
      }

      withName:preprocessing_reMykrobe {
        container = "${params.sif_dir}/ppMykrobe.sif"
      }

      withName:preprocessing_summarise {
        container = "${params.sif_dir}/ppPerljson.sif"
      }
    }
  }
}

// help message
params.help = ''

// input directory
params.input_dir = ""

// filetype fastq or bam
params.filetype = 'fastq'

// glob pattern for input files
params.pattern = '*_R{1,2}.fastq.gz'

// output directory
params.output_dir = ""

// unmix myco 'yes' or 'no'
params.unmix_myco = 'yes'

// principal species in each sample, assuming genus Mycobacterium, default null
// otherwise takes 1 of 10 values: abscessus, africanum, avium, bovis, chelonae, chimaera, fortuitum, intracellulare, kansasii, tuberculosis
params.species = 'null'

// path to kraken2 database
params.kraken_db = ""

// path to bowtie2 index
params.bowtie2_index = ""
